# =============================================================================
# OTTOWRITE PRODUCTION ENVIRONMENT VARIABLES
# =============================================================================
#
# ⚠️  CRITICAL: Use LIVE/PRODUCTION keys only!
# ⚠️  DO NOT use test keys (sk_test_, pk_test_) in production
# ⚠️  Store these securely in Vercel Environment Variables
#
# Setup Instructions:
# 1. Copy values to Vercel: Settings → Environment Variables
# 2. Set environment scope to "Production" only
# 3. Never commit actual values to git
# 4. Rotate keys immediately if exposed
#
# =============================================================================

# =============================================================================
# SUPABASE (PRODUCTION)
# =============================================================================
# Get from: https://app.supabase.com/project/[your-prod-project]/settings/api
#
# IMPORTANT: Use your PRODUCTION Supabase project, not test/dev project
#
NEXT_PUBLIC_SUPABASE_URL=https://[your-prod-project-id].supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGc...your-production-anon-key
SUPABASE_SERVICE_ROLE_KEY=eyJhbGc...your-production-service-role-key

# Optional: For Supabase CLI operations in CI/CD
# Get from: https://app.supabase.com/account/tokens
# SUPABASE_ACCESS_TOKEN=sbp_...your-access-token

# =============================================================================
# STRIPE (LIVE MODE - PRODUCTION KEYS ONLY)
# =============================================================================
# Get from: https://dashboard.stripe.com/apikeys (switch to LIVE mode!)
#
# ⚠️  CRITICAL: Must use LIVE keys (sk_live_, pk_live_)
# ⚠️  Test keys will NOT work in production
#
STRIPE_SECRET_KEY=sk_live_...your-live-secret-key
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_live_...your-live-publishable-key

# Webhook Secret (Production)
# Get from: https://dashboard.stripe.com/webhooks
# Endpoint URL: https://your-production-domain.com/api/webhooks/stripe
# Events: customer.subscription.*, checkout.session.completed, invoice.*, payment_intent.*
STRIPE_WEBHOOK_SECRET=whsec_...your-production-webhook-secret

# Production Price IDs
# Get from: https://dashboard.stripe.com/products (LIVE mode)
# IMPORTANT: Create production prices - DO NOT use test price IDs
STRIPE_PRICE_HOBBYIST=price_...your-production-hobbyist-price
STRIPE_PRICE_PROFESSIONAL=price_...your-production-professional-price
STRIPE_PRICE_STUDIO=price_...your-production-studio-price

# Client-side Price IDs (same as above - for pricing page display)
NEXT_PUBLIC_STRIPE_PRICE_HOBBYIST=price_...your-production-hobbyist-price
NEXT_PUBLIC_STRIPE_PRICE_PROFESSIONAL=price_...your-production-professional-price
NEXT_PUBLIC_STRIPE_PRICE_STUDIO=price_...your-production-studio-price

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
# Production domain (MUST be HTTPS)
# Update this to your actual production domain
# CRITICAL: This is used for CORS security - only this domain will be allowed to access API routes
NEXT_PUBLIC_APP_URL=https://your-production-domain.com

# Node Environment (Vercel sets this automatically)
NODE_ENV=production

# =============================================================================
# AI MODEL API KEYS (PRODUCTION)
# =============================================================================
# At least ONE provider required for AI features to work
#
# Anthropic (Claude) - Recommended
# Get from: https://console.anthropic.com/settings/keys
ANTHROPIC_API_KEY=sk-ant-...your-production-anthropic-key

# OpenAI (GPT) - Optional
# Get from: https://platform.openai.com/api-keys
# OPENAI_API_KEY=sk-...your-production-openai-key

# DeepSeek - Optional
# Get from: https://platform.deepseek.com/api_keys
# DEEPSEEK_API_KEY=sk-...your-production-deepseek-key

# =============================================================================
# MONITORING & ERROR TRACKING (HIGHLY RECOMMENDED)
# =============================================================================

# Sentry DSN (for error tracking and monitoring)
# Get from: https://sentry.io/settings/[org]/projects/[project]/keys/
# CRITICAL: Enable this for production error tracking
NEXT_PUBLIC_SENTRY_DSN=https://...@....ingest.sentry.io/...
SENTRY_ORG=your-sentry-org
SENTRY_PROJECT=your-sentry-project
SENTRY_AUTH_TOKEN=your-sentry-auth-token

# Environment name for Sentry (helps filter production vs staging)
NEXT_PUBLIC_SENTRY_ENVIRONMENT=production

# Vercel Analytics (enabled by default on Vercel)
NEXT_PUBLIC_VERCEL_ANALYTICS=true

# =============================================================================
# DATABASE CONNECTION POOLING (PRODUCTION OPTIMIZED)
# =============================================================================
# Recommended production values for Vercel serverless functions

# Server Client Pool (API routes)
DB_POOL_SIZE=10
DB_CONNECT_TIMEOUT=10000
DB_IDLE_TIMEOUT=60000
DB_MAX_LIFETIME=300000

# Service Role Client Pool (webhooks, admin operations)
SERVICE_ROLE_POOL_SIZE=15
SERVICE_ROLE_CONNECT_TIMEOUT=15000
SERVICE_ROLE_IDLE_TIMEOUT=60000
SERVICE_ROLE_MAX_LIFETIME=300000

# Browser Client Configuration
NEXT_PUBLIC_DB_CONNECT_TIMEOUT=10000

# =============================================================================
# OPTIONAL INTEGRATIONS
# =============================================================================

# Email Service (Resend) - REQUIRED for email notifications
# Get your PRODUCTION API key from: https://resend.com/api-keys
# Pricing: https://resend.com/pricing
# - Free tier: 100 emails/day, 3,000 emails/month
# - Pro tier: $20/month for 50,000 emails
RESEND_API_KEY=re_...your-production-resend-api-key

# Email "From" address (MUST be verified in Resend)
# Setup: https://resend.com/domains
# 1. Add your production domain (e.g., ottowrite.com)
# 2. Add DNS records provided by Resend
# 3. Verify domain
# 4. Use email from verified domain
# Format: "Name <email@your-verified-domain.com>"
RESEND_FROM_EMAIL=OttoWrite <noreply@your-production-domain.com>

# GitHub (optional - for version control integration)
# Get from: https://github.com/settings/tokens
# Required scopes: repo
# GITHUB_TOKEN=ghp_...your-production-github-token
# GITHUB_REPO_URL=https://github.com/your-org/your-repo.git

# Vercel Token (optional - for deployment automation)
# Get from: https://vercel.com/account/tokens
# VERCEL_TOKEN=...your-vercel-token

# =============================================================================
# SECURITY HEADERS & CORS
# =============================================================================
# These are typically configured in vercel.json or middleware.ts
# but can be overridden here if needed

# Allowed origins for CORS (comma-separated)
# NEXT_PUBLIC_ALLOWED_ORIGINS=https://your-production-domain.com

# =============================================================================
# PRODUCTION DEPLOYMENT CHECKLIST
# =============================================================================
#
# Before deploying to production, ensure:
#
# ✅ Supabase:
#    - [ ] Production project created and configured
#    - [ ] All migrations run on production database
#    - [ ] RLS policies enabled and tested
#    - [ ] Database backups enabled
#    - [ ] Anon key and service role key copied
#
# ✅ Stripe:
#    - [ ] Live mode enabled in Stripe dashboard
#    - [ ] Production products and prices created
#    - [ ] Webhook endpoint registered at /api/webhooks/stripe
#    - [ ] Webhook secret copied
#    - [ ] Test payment flow in production
#
# ✅ Domain & SSL:
#    - [ ] Custom domain configured in Vercel
#    - [ ] DNS records pointed to Vercel
#    - [ ] SSL certificate issued
#    - [ ] NEXT_PUBLIC_APP_URL updated to production domain
#
# ✅ Monitoring:
#    - [ ] Sentry project created
#    - [ ] Sentry DSN configured
#    - [ ] Error tracking tested
#    - [ ] Vercel Analytics enabled
#
# ✅ Security:
#    - [ ] All service role keys stored as secrets (not environment variables)
#    - [ ] Rate limiting configured
#    - [ ] CORS properly configured
#    - [ ] CSP headers configured
#
# ✅ AI Services:
#    - [ ] Production API keys for AI providers
#    - [ ] Rate limits configured
#    - [ ] Cost monitoring enabled
#
# ✅ Email Notifications (Resend):
#    - [ ] Resend account created
#    - [ ] Production domain added to Resend
#    - [ ] DNS records (SPF, DKIM, DMARC) configured
#    - [ ] Domain verified in Resend
#    - [ ] Production API key generated
#    - [ ] RESEND_API_KEY added to Vercel
#    - [ ] RESEND_FROM_EMAIL configured
#    - [ ] Test email sent successfully
#
# ✅ Testing:
#    - [ ] All API routes tested in production
#    - [ ] Authentication flow tested
#    - [ ] Payment flow tested
#    - [ ] AI generation tested
#    - [ ] Database queries optimized
#    - [ ] Email notifications tested
#
# =============================================================================
# VERCEL CONFIGURATION INSTRUCTIONS
# =============================================================================
#
# To add these to Vercel:
#
# 1. Go to: https://vercel.com/[your-team]/[your-project]/settings/environment-variables
#
# 2. For EACH variable above:
#    - Click "Add New"
#    - Enter Key (e.g., NEXT_PUBLIC_SUPABASE_URL)
#    - Enter Value (your actual production value)
#    - Select Environment: Production only
#    - Click "Save"
#
# 3. For secrets (Service Role Key, API Keys):
#    - Use "Encrypted" option in Vercel
#    - Never expose in logs or client-side code
#
# 4. After adding all variables:
#    - Trigger a new deployment
#    - Verify environment variables are loaded
#    - Test critical paths
#
# =============================================================================
# ROTATION SCHEDULE
# =============================================================================
#
# Security best practice: Rotate production keys periodically
#
# Quarterly (every 3 months):
# - [ ] Stripe API keys
# - [ ] Supabase service role key
# - [ ] AI provider API keys
#
# Immediately if:
# - [ ] Key accidentally exposed in logs/code
# - [ ] Suspected security breach
# - [ ] Team member with access leaves
#
# =============================================================================
