# OttoWrite Environment Variables Template
# Copy this file to .env.local and fill in your actual values
# NEVER commit .env.local to git!

# =============================================================================
# REQUIRED - Application will not work without these
# =============================================================================

# Supabase Configuration
# Get these from: https://app.supabase.com/project/_/settings/api
NEXT_PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_public_anon_key_here
SUPABASE_SERVICE_ROLE_KEY=your_service_role_key_here
SUPABASE_ANON_KEY=your_public_anon_key_here

# Stripe Configuration
# Get these from: https://dashboard.stripe.com/test/apikeys
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key

# Get webhook secret from: https://dashboard.stripe.com/test/webhooks
# Create webhook endpoint: https://your-domain.com/api/webhooks/stripe
# Events to listen: checkout.session.completed, customer.subscription.updated, customer.subscription.deleted
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# Stripe Price IDs (from your Stripe Dashboard)
# Create products/prices at: https://dashboard.stripe.com/test/products
STRIPE_PRICE_HOBBYIST=price_your_hobbyist_price_id
STRIPE_PRICE_PROFESSIONAL=price_your_professional_price_id
STRIPE_PRICE_STUDIO=price_your_studio_price_id

# AI Model API Keys (at least one required for AI features)
# Anthropic (Claude): https://console.anthropic.com/settings/keys
ANTHROPIC_API_KEY=sk-ant-your_anthropic_api_key

# OpenAI (GPT): https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your_openai_api_key

# DeepSeek: https://platform.deepseek.com/api_keys
DEEPSEEK_API_KEY=sk-your_deepseek_api_key

# =============================================================================
# OPTIONAL - For specific features
# =============================================================================

# GitHub Token (optional - for GitHub integration features)
# Create at: https://github.com/settings/tokens
# Required scopes: repo (if private repos), public_repo (if public only)
GITHUB_TOKEN=ghp_your_github_token
GITHUB_REPO_URL=https://github.com/your-org/your-repo.git

# Vercel Token (optional - for deployment automation)
# Get from: https://vercel.com/account/tokens
VERCEL_TOKEN=your_vercel_token

# Supabase Access Token (optional - for CLI operations)
# Get from: https://app.supabase.com/account/tokens
SUPABASE_ACCESS_TOKEN=sbp_your_supabase_access_token

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# App URL (use http://localhost:3000 for local development)
NEXT_PUBLIC_APP_URL=http://localhost:3000

# PostgreSQL Password (for local Supabase development)
# Only needed if running Supabase locally with `supabase start`
PGPASSWORD=your_local_postgres_password

# =============================================================================
# MONITORING & OBSERVABILITY (Production)
# =============================================================================

# Sentry (optional - for error tracking)
# Get from: https://sentry.io/settings/projects/
# NEXT_PUBLIC_SENTRY_DSN=your_sentry_dsn
# SENTRY_ORG=your_sentry_org
# SENTRY_PROJECT=your_sentry_project
# SENTRY_AUTH_TOKEN=your_sentry_auth_token

# Vercel Analytics (optional - enabled by default on Vercel)
# NEXT_PUBLIC_VERCEL_ANALYTICS=true

# =============================================================================
# DEVELOPMENT ONLY
# =============================================================================

# Next.js Development Mode
# NODE_ENV=development

# Enable verbose logging (optional)
# DEBUG=true

# =============================================================================
# NOTES
# =============================================================================
#
# Security Best Practices:
# 1. NEVER commit this file with real values to git
# 2. Rotate keys immediately if accidentally exposed
# 3. Use test keys (sk_test_, pk_test_) for development
# 4. Use production keys (sk_live_, pk_live_) only in production
# 5. Restrict API key permissions to minimum required
#
# Where to store secrets in production:
# - Vercel: Project Settings → Environment Variables
# - GitHub Actions: Repository Settings → Secrets and variables → Actions
# - Local: .env.local (git-ignored)
#
# Required for different features:
# - Authentication: Supabase keys
# - Payments: Stripe keys + webhook secret + price IDs
# - AI Generation: At least one AI provider key (Anthropic/OpenAI/DeepSeek)
# - GitHub Integration: GitHub token
# - Deployment: Vercel token
#
